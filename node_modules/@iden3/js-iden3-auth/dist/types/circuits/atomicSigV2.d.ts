import { PubSignalsVerifier, VerifyOpts } from '../circuits/registry';
import { Query } from '../circuits/query';
import { ISchemaLoader } from '../loaders/schema';
import { Resolvers } from '../state/resolver';
import { IDOwnershipPubSignals } from '../circuits/ownershipVerifier';
import { Hash } from '@iden3/js-merkletree';
import { Id, SchemaHash } from '@iden3/js-iden3-core';
export declare class AtomicQuerySigV2PubSignals extends IDOwnershipPubSignals implements PubSignalsVerifier {
    issuerID?: Id;
    issuerAuthState?: Hash;
    issuerClaimNonRevState?: Hash;
    claimSchema: SchemaHash;
    slotIndex: number;
    operator: number;
    value: bigint[];
    timestamp: number;
    merklized: number;
    claimPathKey?: bigint;
    claimPathNotExists: number;
    isRevocationChecked: number;
    constructor(pubSignals: string[]);
    verifyQuery(query: Query, schemaLoader: ISchemaLoader, verifiablePresentation?: JSON): Promise<void>;
    verifyStates(resolvers: Resolvers, opts?: VerifyOpts): Promise<void>;
}
