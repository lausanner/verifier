import { ISchemaLoader } from '../loaders/schema';
import { Query } from '../circuits/query';
import { Resolvers } from '../state/resolver';
export interface VerifyOpts {
    acceptedStateTransitionDelay?: number;
}
export interface PubSignalsVerifier {
    verifyQuery(query: Query, schemaLoader: ISchemaLoader, verifiablePresentation?: JSON): Promise<void>;
    verifyStates(resolver: Resolvers, opts?: VerifyOpts): Promise<void>;
    verifyIdOwnership(sender: string, challenge: bigint): Promise<void>;
}
export interface PubSignals {
    new (pubSignals: string[]): PubSignalsVerifier;
}
export type VerifierType = PubSignalsVerifier & PubSignals;
export declare class Circuits {
    static getCircuitPubSignals(id: string): VerifierType;
}
